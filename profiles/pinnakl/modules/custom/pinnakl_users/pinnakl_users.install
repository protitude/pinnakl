<?php

/**
 * Implements hook_install().
 */
function pinnakl_install() {
  // Set secure permissions settings.
  variable_set('secure_permissions_active', '1');
  variable_set('secure_permissions_disable_forms', '0');
  variable_set('secure_permissions_show_permissions_page', '1');
  variable_set('secure_permissions_show_roles_page', '1');
  variable_set('secure_permissions_use_default', '0');
  variable_set('secure_permissions_verbose', '1');

// Load our roles and permissions.
  secure_permissions_rebuild();

  $administrator_role = user_role_load_by_name('administrator');

  // Create default users keyed by role id.
  $default_users = array(
    $administrator_role->rid => array(
      'Miles France' => 'miles.france@pinnakl.com',
      'Vijay Patel' => 'vijay.patel@pinnakl.com',
    ),
  );

  // Final sanity check.
  _pinnakl_grant_all_perms($developer_role->rid);

  foreach ($default_users as $rid => $users) {
    foreach ($users as $name => $mail) {
      // Create the account.
      $account = new stdClass;
      $account->name = $name;
      $account->mail = $mail;
      $account->status = 1;
      $account = user_save($account);

      // Grant user the role.
      $query = db_insert('users_roles')->fields(array('uid', 'rid'));
      $query->values(array('uid' => $account->uid, 'rid' => $rid));
      $query->execute();
    }
  }
}

/**
 * Grants all perms to specified role ID.
 * This is sort of a "last check" just in case we haven't
 * exported *every* permission.
 */
function _pinnakl_grant_all_perms($rid) {
  // Rebuild module data.
  system_rebuild_module_data();

  // Grant every permission to role.
  $module_info = system_get_info('module');
  foreach (module_implements('permission') as $module) {
    $modules[$module] = $module_info[$module]['name'];
  }
  $permissions = array();
  foreach($modules as $module => $display_name) {
    $perms = array();
    $perms = module_invoke($module, 'permission');
    $permissions += $perms;
  }
  if ($rid > 2) {
    user_role_grant_permissions($rid, array_keys($permissions));
    return TRUE;
  }
  else {
    // We wont grant perms to anon or auth.. only a new role (>2).
    return FALSE;
  }
}
